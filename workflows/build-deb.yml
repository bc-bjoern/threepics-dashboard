name: Build Debian Package

on:
  push:
    tags: [ 'v*' ]

permissions:
  contents: write

jobs:
  build-deb:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: threepics
      PACKAGE_NAME: threepics-dashboard

    steps:
      - uses: actions/checkout@v4

      - name: Set Version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "BUILDROOT=$RUNNER_TEMP/${PACKAGE_NAME}_build" >> $GITHUB_ENV

      - name: Show Version
        run: echo "Building version ${{ env.VERSION }}"


      - name: Prepare Build Directory
        run: |
          mkdir -p "${{ env.BUILDROOT }}"
          cp -r setup/debian/* "${{ env.BUILDROOT }}/"
          mkdir -p "${{ env.BUILDROOT }}/opt/${{ env.PROJECT_NAME }}/${{ env.PACKAGE_NAME }}"

      - name: Fix Permissions
        run: |
          chmod -R 0755 "${{ env.BUILDROOT }}/DEBIAN"
          chmod 440 "$BUILDROOT/etc/sudoers.d/threepics"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: pnpm install

      - name: Build Frontend
        working-directory: frontend
        run: pnpm build

      - name: Copy full source (backend + frontend + dist) to .deb structure
        run: |
          mkdir -p "${{ env.BUILDROOT }}/opt/${{ env.PROJECT_NAME }}/${{ env.PACKAGE_NAME }}/frontend"
          mkdir -p "${{ env.BUILDROOT }}/opt/${{ env.PROJECT_NAME }}/${{ env.PACKAGE_NAME }}/backend"
          cp -r frontend/dist "${{ env.BUILDROOT }}/opt/${{ env.PROJECT_NAME }}/${{ env.PACKAGE_NAME }}/frontend/"
          cp -r backend/* "${{ env.BUILDROOT }}/opt/${{ env.PROJECT_NAME }}/${{ env.PACKAGE_NAME }}/backend/"


      - name: Build DEB
        run: |
          dpkg-deb --build "${{ env.BUILDROOT }}" "${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.deb"

      - name: List Artifacts
        run: ls -lh "${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.deb"

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          files: "${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.deb"
